{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","services/login.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseUrl","token","noteService","getAll","request","axios","get","nonExisting","id","date","then","response","data","concat","create","newObject","a","config","headers","Authorization","post","update","put","setToken","newToken","Notification","message","loginService","login","credentials","Footer","style","color","fontStyle","fontSize","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","username","setUsername","password","setPassword","user","setUser","useEffect","initialNotes","loggedUserJSON","window","localStorage","getItem","JSON","parse","addNote","event","preventDefault","noteObject","Date","toISOString","Math","random","returnedNote","handleNoteChange","target","value","notesToShow","filter","handleLogin","console","log","setItem","stringify","setTimeout","onSubmit","type","name","onChange","map","find","n","changedNote","catch","error","toggleImportanceOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d67af05e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance  }) => {\r\n  const label = note.important\r\n  ? 'make not important' : 'make important'\r\n\r\n  return (\r\n    <li className='note'>\r\n      {note.content}\r\n    <button onClick={toggleImportance}>{label}</button></li>\r\n  )\r\n}\r\n\r\nexport default Note","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    const nonExisting = {\r\n        id: 10000,\r\n        content: 'This note is not saved to server',\r\n        date: '2019-05-30T17:30:31.098Z',\r\n        important: true,\r\n      }\r\n    return request.then(response => response.data.concat(nonExisting))\r\n  }\r\n  \r\n  const create = async newObject => {\r\n\r\n    const config = {\r\n      headers: { Authorization: token },\r\n    }\r\n  \r\n    const response = await axios.post(baseUrl, newObject, config)\r\n\r\n    return response.data\r\n  }\r\n  \r\n  const update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\n  const noteService = { getAll, create, update, setToken }\r\n  export default noteService\r\n","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nconst loginService = { login }\r\nexport default loginService","import React, { useState, useEffect } from 'react'\r\n\r\nimport Note from './components/Note'\r\nimport noteService from './services/notes'\r\nimport Notification from './components/Notification'\r\n\r\n\r\nimport loginService from './services/login' \r\n\r\nconst Footer = () => {\r\n  const footerStyle = {\r\n    color: 'green',\r\n    fontStyle: 'italic',\r\n    fontSize: 16\r\n  }\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <em>Note app, Department of Computer Science, University of Helsinki 2020</em>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst App = (props) => {\r\n  const [notes, setNotes] = useState([])\r\n  const [newNote, setNewNote] = useState('a new note...')\r\n  const [showAll, setShowAll] = useState(true)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  const [username, setUsername] = useState('') \r\n  const [password, setPassword] = useState('') \r\n\r\n  const [user, setUser] = useState(null)\r\n\r\n  useEffect(() => {\r\n    noteService\r\n      .getAll()\r\n      .then(initialNotes => {\r\n        setNotes(initialNotes)\r\n      })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      setUser(user)\r\n      noteService.setToken(user.token)\r\n    }\r\n  }, [])\r\n\r\n\r\n  const toggleImportanceOf = (id) => {\r\n    const note = notes.find(n => n.id === id)\r\n    const changedNote = { ...note, important: !note.important }\r\n\r\n    noteService\r\n      .update(id, changedNote)\r\n      .then(returnedNote => {\r\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n      })\r\n      .catch(error => {\r\n        setErrorMessage(\r\n          `Note '${note.content}' was already removed from server`\r\n        )\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n        setNotes(notes.filter(n => n.id !== id))\r\n      })\r\n\r\n  }\r\n\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault()\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() < 0.5,\r\n    }\r\n\r\n    noteService\r\n      .create(noteObject)\r\n      .then(returnedNote => {\r\n        setNotes(notes.concat(returnedNote))\r\n        setNewNote('')\r\n      })\r\n\r\n  }\r\n\r\n  const handleNoteChange = (event) => {\r\n    setNewNote(event.target.value)\r\n  }\r\n\r\n  const notesToShow = showAll\r\n    ? notes\r\n    : notes.filter(note => note.important)\r\n\r\n\r\n    const handleLogin = async (event) => {\r\n      event.preventDefault()\r\n      console.log('logging in with', username, password)\r\n      try {\r\n        const user = await loginService.login({\r\n          username, password,\r\n        })\r\n\r\n        window.localStorage.setItem(\r\n          'loggedNoteappUser', JSON.stringify(user)\r\n        ) \r\n\r\n        noteService.setToken(user.token)\r\n        setUser(user)\r\n        setUsername('')\r\n        setPassword('')\r\n      } catch (exception) {\r\n        setErrorMessage('Wrong credentials')\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n      }\r\n    }\r\n\r\n\r\n    \r\n  const loginForm = () => (\r\n    <form onSubmit={handleLogin}>\r\n      <div>\r\n        username\r\n          <input\r\n          type=\"text\"\r\n          value={username}\r\n          name=\"Username\"\r\n          onChange={({ target }) => setUsername(target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        password\r\n          <input\r\n          type=\"password\"\r\n          value={password}\r\n          name=\"Password\"\r\n          onChange={({ target }) => setPassword(target.value)}\r\n        />\r\n      </div>\r\n      <button type=\"submit\">login</button>\r\n    </form>      \r\n  )\r\n\r\n  const noteForm = () => (\r\n    <form onSubmit={addNote}>\r\n      <input\r\n        value={newNote}\r\n        onChange={handleNoteChange}\r\n      />\r\n      <button type=\"submit\">save</button>\r\n    </form>  \r\n  )\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Notification message={errorMessage} />\r\n\r\n      {user === null ?\r\n      loginForm() :\r\n      <div>\r\n        <p>{user.name} logged-in</p>\r\n        {noteForm()}\r\n      </div>\r\n    }\r\n\r\n\r\n    <hr/>\r\n\r\n      <div>\r\n        <button onClick={() => setShowAll(!showAll)}>\r\n          show {showAll ? 'important' : 'all'}\r\n        </button>\r\n      </div>\r\n      <ul>\r\n        {notesToShow.map(note =>\r\n          <Note\r\n            key={note.id}\r\n            note={note}\r\n            toggleImportance={() => toggleImportanceOf(note.id)}\r\n          />\r\n        )}\r\n      </ul>\r\n  \r\n      <Footer/>\r\n    </div>\r\n  )\r\n}\r\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App.js'\n\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n"],"sourceRoot":""}